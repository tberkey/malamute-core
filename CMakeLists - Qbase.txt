################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Please refer to the README for information about making permanent changes.  #
################################################################################

########################################################################
# Project setup
########################################################################
cmake_minimum_required(VERSION 2.8)
project(mlm)
enable_language(C)
enable_testing()

set(SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR})
set(BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR})

########################################################################
# determine version
########################################################################
foreach(which MAJOR MINOR PATCH)
    file(STRINGS "${SOURCE_DIR}/include/mlm_library.h" MLM_VERSION_STRING REGEX "#define MLM_VERSION_${which}")
    string(REGEX MATCH "#define MLM_VERSION_${which} ([0-9_]+)" MLM_REGEX_MATCH "${MLM_VERSION_STRING}")
    if (NOT MLM_REGEX_MATCH)
        message(FATAL_ERROR "failed to parse MLM_VERSION_${which} from malamute.h")
    endif()
    set(MLM_${which}_VERSION ${CMAKE_MATCH_1})
endforeach(which)

set(MLM_VERSION ${MLM_MAJOR_VERSION}.${MLM_MINOR_VERSION}.${MLM_PATCH_VERSION})

########################################################################
# platform.h
########################################################################
include(CheckIncludeFile)
CHECK_INCLUDE_FILE("linux/wireless.h" HAVE_LINUX_WIRELESS_H)
CHECK_INCLUDE_FILE("net/if_media.h" HAVE_NET_IF_MEDIA_H)

include(CheckFunctionExists)
CHECK_FUNCTION_EXISTS("getifaddrs" HAVE_GETIFADDRS)
CHECK_FUNCTION_EXISTS("freeifaddrs" HAVE_FREEIFADDRS)

include(CheckIncludeFiles)
check_include_files("sys/socket.h;net/if.h" HAVE_NET_IF_H)
if (NOT HAVE_NET_IF_H)
    CHECK_INCLUDE_FILE("net/if.h" HAVE_NET_IF_H)
endif()

file(WRITE ${BINARY_DIR}/platform.h.in "
#cmakedefine HAVE_LINUX_WIRELESS_H
#cmakedefine HAVE_NET_IF_H
#cmakedefine HAVE_NET_IF_MEDIA_H
#cmakedefine HAVE_GETIFADDRS
#cmakedefine HAVE_FREEIFADDRS
")

configure_file(${BINARY_DIR}/platform.h.in ${BINARY_DIR}/platform.h)

#The MSVC C compiler is too out of date,
#so the sources have to be compiled as c++
if (MSVC)
    enable_language(CXX)
    file(GLOB sources ${SOURCE_DIR}/src/*.c)
    set_source_files_properties(${sources} PROPERTIES LANGUAGE CXX)
    set(MORE_LIBRARIES ws2_32 Rpcrt4 Iphlpapi)
endif()

# required libraries for mingw
if (MINGW)
    set(MORE_LIBRARIES -lws2_32 -lrpcrt4 -liphlpapi)
endif()


#-----------------------------------------------------------------------------
#default to static runtime library
if(NOT DEFINED STATIC_RUNLIB)
    option(STATIC_RUNLIB "" ON)
endif()
 
# platform specifics
if(MSVC)
    #remove static/shared compiler options
    string(REGEX REPLACE "/M[TD]d?" ""  CMAKE_CXX_FLAGS                "${CMAKE_CXX_FLAGS}")
    string(REGEX REPLACE "/M[TD]d?" ""  CMAKE_CXX_FLAGS_DEBUG          "${CMAKE_CXX_FLAGS_DEBUG}")
    string(REGEX REPLACE "/M[TD]d?" ""  CMAKE_CXX_FLAGS_RELEASE        "${CMAKE_CXX_FLAGS_RELEASE}")
    string(REGEX REPLACE "/M[TD]d?" ""  CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO}")
endif()


########################################################################
# import ZeroMQ libraries
########################################################################
add_library(ZEROMQ_LIBRARIES_STATIC STATIC IMPORTED)
set_property(TARGET ZEROMQ_LIBRARIES_STATIC PROPERTY IMPORTED_LOCATION_DEBUG          "${ZEROMQ_LIB_DEBUG_STATIC}")
set_property(TARGET ZEROMQ_LIBRARIES_STATIC PROPERTY IMPORTED_LOCATION_RELEASE        "${ZEROMQ_LIB_RELEASE_STATIC}")
set_property(TARGET ZEROMQ_LIBRARIES_STATIC PROPERTY IMPORTED_LOCATION_RELWITHDEBINFO "${ZEROMQ_LIB_RELWITHDEBINFO_STATIC}")   
add_library(ZEROMQ_LIBRARIES_SHARED SHARED IMPORTED)
set_property(TARGET ZEROMQ_LIBRARIES_SHARED PROPERTY IMPORTED_IMPLIB_DEBUG          "${ZEROMQ_LIB_DEBUG_SHARED}")
set_property(TARGET ZEROMQ_LIBRARIES_SHARED PROPERTY IMPORTED_IMPLIB_RELEASE        "${ZEROMQ_LIB_RELEASE_SHARED}")
set_property(TARGET ZEROMQ_LIBRARIES_SHARED PROPERTY IMPORTED_IMPLIB_RELWITHDEBINFO "${ZEROMQ_LIB_RELWITHDEBINFO_SHARED}")   

########################################################################
# import CZMQ libraries
########################################################################
add_library(CZMQ_LIBRARIES_STATIC STATIC IMPORTED)
set_property(TARGET CZMQ_LIBRARIES_STATIC PROPERTY IMPORTED_LOCATION_DEBUG          "${CZMQ_LIB_DEBUG_STATIC}")
set_property(TARGET CZMQ_LIBRARIES_STATIC PROPERTY IMPORTED_LOCATION_RELEASE        "${CZMQ_LIB_RELEASE_STATIC}")
set_property(TARGET CZMQ_LIBRARIES_STATIC PROPERTY IMPORTED_LOCATION_RELWITHDEBINFO "${CZMQ_LIB_RELWITHDEBINFO_STATIC}")   
add_library(CZMQ_LIBRARIES_SHARED SHARED IMPORTED)
set_property(TARGET CZMQ_LIBRARIES_SHARED PROPERTY IMPORTED_IMPLIB_DEBUG          "${CZMQ_LIB_DEBUG_SHARED}")
set_property(TARGET CZMQ_LIBRARIES_SHARED PROPERTY IMPORTED_IMPLIB_RELEASE        "${CZMQ_LIB_RELEASE_SHARED}")
set_property(TARGET CZMQ_LIBRARIES_SHARED PROPERTY IMPORTED_IMPLIB_RELWITHDEBINFO "${CZMQ_LIB_RELWITHDEBINFO_SHARED}")   

########################################################################
# includes
########################################################################
set (mlm_headers
    include/mlm_library.h
    include/malamute.h
    src/zbits.h
    include/mlm_proto.h
    include/mlm_server.h
    include/mlm_client.h
    src/mlm_msg.h
    src/mlm_stream_simple.h
    src/mlm_mailbox_simple.h
    src/mlm_server_engine.inc
    src/mlm_client_engine.inc
    src/mlm_client_custom.xml
)
source_group ("Header Files" FILES ${mlm_headers})
install(FILES ${mlm_headers} DESTINATION include)

########################################################################
# library
########################################################################
include_directories(${BINARY_DIR})
include_directories(${SOURCE_DIR}/include)
include_directories(${ZEROMQ_INCLUDE_DIR})
include_directories(${CZMQ_INCLUDE_DIR})
set (mlm_sources
    src/zbits.c
    src/mlm_proto.c
    src/mlm_server.c
    src/mlm_client.c
    src/mlm_msg.c
    src/mlm_stream_simple.c
    src/mlm_mailbox_simple.c
)
source_group ("Source Files" FILES ${mlm_sources})


if(STATIC_RUNLIB)
    #static runtime library
    set(static_flag_debug "s")
    set(static_flag_release "s-")
    if (MSVC)
        set(STATIC_COMPILE_OPTIONS "/MT$<$<CONFIG:Debug>:d>")
    else()
        #set other compiler options here
    endif()    
else()
    #dynamic runtime library
    set(static_flag_debug "")
    set(static_flag_release "")
    if (MSVC)
        set(STATIC_COMPILE_OPTIONS "/MD$<$<CONFIG:Debug>:d>")
    else()
        #set other compiler options here
    endif()
endif()

set(mlm_static_compile_flags "/D LIBMLM_STATIC" "/D LIBCZMQ_STATIC" "/D ZMQ_STATIC")

if(MSVC)
    #create shared library
    add_library(mlm SHARED ${mlm_sources})
    set_target_properties(mlm PROPERTIES
                          PUBLIC_HEADER "${mlm_headers}"
                          RELEASE_POSTFIX "-mt-${MLM_MAJOR_VERSION}_${MLM_MINOR_VERSION}_${MLM_PATCH_VERSION}"
                          RELWITHDEBINFO_POSTFIX "-mt-${MLM_MAJOR_VERSION}_${MLM_MINOR_VERSION}_${MLM_PATCH_VERSION}"
                          DEBUG_POSTFIX "-mt-gd-${MLM_MAJOR_VERSION}_${MLM_MINOR_VERSION}_${MLM_PATCH_VERSION}"
                          RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/lib"
                          ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/lib"
                          COMPILE_OPTIONS "/D LIBMLM_EXPORTS"
                          OUTPUT_NAME "mlm")
    target_compile_options(mlm PRIVATE "/MD$<$<CONFIG:Debug>:d>")
    target_link_libraries(mlm ZEROMQ_LIBRARIES_SHARED CZMQ_LIBRARIES_SHARED "${MORE_LIBRARIES}")
    
    #create static library
    add_library(mlm-static STATIC ${mlm_sources})
    set_target_properties(mlm-static PROPERTIES
                          PUBLIC_HEADER "${mlm_headers}"
                          RELEASE_POSTFIX "-mt-${static_flag_release}${MLM_MAJOR_VERSION}_${MLM_MINOR_VERSION}_${MLM_PATCH_VERSION}"
                          RELWITHDEBINFO_POSTFIX "-mt-${static_flag_release}${MLM_MAJOR_VERSION}_${MLM_MINOR_VERSION}_${MLM_PATCH_VERSION}"
                          DEBUG_POSTFIX "-mt-${static_flag_debug}gd-${MLM_MAJOR_VERSION}_${MLM_MINOR_VERSION}_${MLM_PATCH_VERSION}"
                          ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/lib"
                          COMPILE_OPTIONS "${mlm_static_compile_flags}"
                          OUTPUT_NAME "libmlm")
    target_compile_options(mlm-static PRIVATE "${STATIC_COMPILE_OPTIONS}")
    #target_link_libraries(mlm-static)
else()
    #create shared library
    add_library(mlm SHARED ${mlm_sources})
    set_target_properties(mlm PROPERTIES
                          PUBLIC_HEADER "${mlm_headers}"
                          RELEASE_POSTFIX "-mt-${MLM_MAJOR_VERSION}_${MLM_MINOR_VERSION}_${MLM_PATCH_VERSION}"
                          RELWITHDEBINFO_POSTFIX "-mt-${MLM_MAJOR_VERSION}_${MLM_MINOR_VERSION}_${MLM_PATCH_VERSION}"
                          DEBUG_POSTFIX "-mt-gd-${MLM_MAJOR_VERSION}_${MLM_MINOR_VERSION}_${MLM_PATCH_VERSION}"
                          LIBRARY_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/lib"
                          ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/lib"
                          COMPILE_OPTIONS "/D LIBMLM_EXPORTS"
                          OUTPUT_NAME "mlm")
    target_link_libraries(mlm ZEROMQ_LIBRARIES_SHARED CZMQ_LIBRARIES_SHARED "${MORE_LIBRARIES}")
                          
    #create static library
    add_library(mlm-static STATIC ${mlm_sources})
    set_target_properties(mlm-static PROPERTIES
                          PUBLIC_HEADER "${mlm_headers}"
                          RELEASE_POSTFIX "-mt-${static_flag_release}${MLM_MAJOR_VERSION}_${MLM_MINOR_VERSION}_${MLM_PATCH_VERSION}"
                          RELWITHDEBINFO_POSTFIX "-mt-${static_flag_release}${MLM_MAJOR_VERSION}_${MLM_MINOR_VERSION}_${MLM_PATCH_VERSION}"
                          DEBUG_POSTFIX "-mt-${static_flag_debug}gd-${MLM_MAJOR_VERSION}_${MLM_MINOR_VERSION}_${MLM_PATCH_VERSION}"
                          ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/lib"
                          COMPILE_OPTIONS "${mlm_static_compile_flags}"
                          OUTPUT_NAME "libmlm")
    target_compile_options(mlm-static PRIVATE "${STATIC_COMPILE_OPTIONS}")
    #target_link_libraries(mlm-static)
 endif()


#-----------------------------------------------------------------------------
# installer

if(MSVC)
    install(TARGETS mlm mlm-static EXPORT MLM-TARGETS
            RUNTIME DESTINATION lib
            ARCHIVE DESTINATION lib
            PUBLIC_HEADER DESTINATION include)
else()
    install(TARGETS mlm mlm-static EXPORT MLM-TARGETS
            LIBRARY DESTINATION lib
            ARCHIVE DESTINATION lib
            PUBLIC_HEADER DESTINATION include)
endif()   

########################################################################
# tests
########################################################################
add_executable(mlm_selftest ${SOURCE_DIR}/src/mlm_selftest.c)
set_target_properties(mlm_selftest  PROPERTIES
                      RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/bin"
                      COMPILE_OPTIONS "${mlm_static_compile_flags}")
target_compile_options(mlm_selftest PRIVATE "${STATIC_COMPILE_OPTIONS}")
target_link_libraries(mlm_selftest mlm-static ZEROMQ_LIBRARIES_STATIC CZMQ_LIBRARIES_STATIC "${MORE_LIBRARIES}")
add_test(mlm_selftest mlm_selftest)

########################################################################
# summary
########################################################################
message(STATUS "version: ${MLM_VERSION}")
message(STATUS "install: ${CMAKE_INSTALL_PREFIX}")

################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Please refer to the README for information about making permanent changes.  #
################################################################################
